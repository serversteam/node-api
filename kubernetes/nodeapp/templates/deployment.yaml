apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nodeapp.fullname" . }}
  labels:
{{ include "nodeapp.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "nodeapp.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "nodeapp.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: DB_USERNAME
                name: {{ .Release.Name }}-auth
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DB_PASSWORD
                name: {{ .Release.Name }}-auth
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                key: DB_HOST
                name: {{ .Release.Name }}-config
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                key: DB_PORT
                name: {{ .Release.Name }}-config
          - name: DB_DATABASE
            valueFrom:
              configMapKeyRef:
                key: DB_DATABASE
                name: {{ .Release.Name }}-config      
          - name: DB_REPLICASET
            valueFrom:
              configMapKeyRef:
                key: DB_REPLICASET
                name: {{ .Release.Name }}-config  
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP

